{
  "name": "coffee",
  "version": "1.2.0",
  "description": "Test command line on nodejs",
  "main": "index.js",
  "dependencies": {
    "debug": "~2.2.0",
    "childprocess": "~1.0.2"
  },
  "devDependencies": {
    "autod": "2",
    "eslint": "1",
    "istanbul": "0",
    "mocha": "2",
    "should": "6"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/popomore/coffee.git"
  },
  "homepage": "https://github.com/popomore/coffee",
  "author": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "keywords": [
    "test",
    "shell",
    "spawn",
    "fork",
    "child_process",
    "exec"
  ],
  "license": "MIT",
  "scripts": {
    "lint": "eslint index.js lib test",
    "test": "mocha -R spec -t 20000",
    "cover": "istanbul cover --report none --print none node_modules/mocha/bin/_mocha -- -R spec -t 20000",
    "cov": "npm run clean && npm run lint && npm run cover && istanbul report text-summary json lcov html",
    "autod": "autod -e test/fixtures -f ~ -w",
    "clean": "rm -rf coverage"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "readme": "# Coffee\n\nTest command line on Node.js.\n\n---\n\n[![NPM version](https://img.shields.io/npm/v/coffee.svg?style=flat)](https://npmjs.org/package/coffee)\n[![Build Status](https://img.shields.io/travis/popomore/coffee.svg?style=flat)](https://travis-ci.org/popomore/coffee)\n[![codecov.io](https://img.shields.io/codecov/c/github/popomore/coffee.svg?style=flat)](http://codecov.io/github/popomore/coffee?branch=master)\n[![NPM downloads](http://img.shields.io/npm/dm/coffee.svg?style=flat)](https://npmjs.org/package/coffee)\n\n## Install\n\n```\n$ npm install coffee -g\n```\n\n## Usage\n\nCoffee is useful for test command line in test frammework (like Mocha).\n\n```js\ndescribe('cat', function() {\n  it('should concat input', function(done) {\n    var coffee = require('coffee');\n    coffee.spawn('cat')\n    .write('1')\n    .write('2')\n    .expect('stdout', '12')\n    .expect('code', 0)\n    .end(done);\n  })\n})\n```\n\nYou can also use fork for spawning Node processes.\n\n```js\ncoffee.fork('/path/to/file.js', ['args '])\n.expect('stdout', '12\\n')\n.expect('stderr', '34\\n')\n.expect('code', 0)\n.end(done);\n```\n\nIn file.js\n\n```js\nconsole.log(12);\nconsole.error(34);\n```\n\n### Fork Node process with `options.autoCoverage`\n\nIf you want to run test coverage with your child process,\nPlease set `options.autoCoverage = true`.\n\n```js\ncoffee.fork('/path/to/file.js', ['args'], { autoCoverage: true })\n.expect('stdout', '12\\n')\n.expect('stderr', '34\\n')\n.expect('code', 0)\n.end(done);\n```\n\nAnd running test with [istanbul].\n\n```bash\n$ istanbul cover --report none --print none node_modules/mocha/bin/_mocha -- -R spec -t 5000\n$ istanbul report text-summary json lcov html\n=============================== Coverage summary ===============================\nStatements   : 98.2% ( 109/111 )\nBranches     : 97.37% ( 37/38 )\nFunctions    : 100% ( 20/20 )\nLines        : 98.18% ( 108/110 )\n================================================================================\n```\n\n## API\n\n### coffee.spawn\n\nRun command using `child_process.spawn`, then return `Coffee` instance.\n\nArguments see [child_process.spawn](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options)\n\n### coffee.fork\n\nRun command using `child_process.fork`, then return `Coffee` instance.\n\nArguments see [child_process.fork](http://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options)\n\n### Coffee\n\nAssertion object\n\n#### coffee.expect(type, expected)\n\nAssert type with expected value, expected value can be string, regular expression, and array.\n\n```js\ncoffee.spawn('echo', ['abcdefg'])\n.expect('stdout', 'abcdefg')\n.expect('stdout', /^abc/)\n.expect('stdout', ['abcdefg', /abc/])\n.end(done);\n```\n\nAccept type: `stdout`, `stderr`, `code`, `error`\n\n#### coffee.write(data)\n\nWrite data to stdin, see example above.\n\n#### coffee.end(callback)\n\nCallback will be called after completing the assertion, the first argument is Error if throw exception.\n\n#### coffee.debug()\n\nWrite data to process.stdout and process.stderr for debug\n\n## LISENCE\n\nCopyright (c) 2015 popomore. Licensed under the MIT license.\n\n\n[istanbul]:\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/popomore/coffee/issues"
  },
  "_id": "coffee@1.2.0",
  "dist": {
    "shasum": "b2a6e73cc72fffdcd76a2a9e68be9c8a0c53cf9b"
  },
  "_from": "coffee@",
  "_resolved": "https://registry.npmjs.org/coffee/-/coffee-1.2.0.tgz"
}
